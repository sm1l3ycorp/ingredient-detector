{"version":3,"sources":["reportWebVitals.js","index.js","App.js","Components/Header/Header.js","Components/ImageUploader/ImageUploader.js","Components/Detector/Detector.js","Components/Ingredients/Ingredients.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","API_KEY","Buffer","from","toString","AppStyle","styled","div","TableWrapper","useState","images","setImages","detected","setDetected","useStyles","makeStyles","theme","grow","flexGrow","title","display","paddingLeft","breakpoints","up","Header","classes","className","position","variant","noWrap","ImageUploader","value","onChange","imageList","addUpdateIndex","maxNumber","dataURLKey","onImageUpload","onImageUpdate","onImageRemoveAll","dragProps","onImageRemove","isDragging","length","color","startIcon","onClick","map","image","index","src","alt","width","Detector","app","Clarifai","apiKey","detect","a","models","predict","FOOD_MODEL","data","rawData","outputs","concepts","forEach","element","parseFloat","toFixed","console","log","useEffect","data_url","split","propTypes","PropTypes","string","isRequired","array","func","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","TableRow","Ingredients","React","useMemo","columns","accessor","useTable","initialState","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","component","Paper","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","getRowProps","cells","cell","getCellProps"],"mappings":"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","file":"static/js/main.962663dd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\nimport { React, useState } from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport ImageUploader from \"./Components/ImageUploader/ImageUploader\";\nimport Detector from \"./Components/Detector/Detector\";\nimport Ingredients from \"./Components/Ingredients/Ingredients\";\nconst API_KEY = Buffer.from(\"OTU3MGY5YzM2YmM3NGYwODkyZmZiZTk2ZGI2ZjlkYjY=\", 'base64').toString('ascii');\n\nconst AppStyle = styled.div`\n  text-align: center;\n`;\nconst TableWrapper = styled.div`\n  width: 30rem;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [detected, setDetected] = useState([]);\n\n  return (\n    <AppStyle>\n      <Header />\n      <ImageUploader images={images} setImages={setImages} />\n      <Detector API_KEY={API_KEY} images={images} setDetected={setDetected} />\n      <br />\n      <TableWrapper>\n        <Ingredients detected={detected} />\n      </TableWrapper>\n      <br />\n    </AppStyle>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: \"none\",\n    paddingLeft: \"1rem\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <FastfoodIcon />\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Ingredient Detector\n          </Typography>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport ImageUploading from \"react-images-uploading\";\nimport { Button } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport PropTypes from 'prop-types';\n\nconst ImageUploader = ({ images, setImages }) => {\n  const maxNumber = 1;\n\n  const onChange = (imageList, addUpdateIndex) => {\n    setImages(imageList);\n  };\n\n  return (\n    <>\n      <ImageUploading\n        value={images}\n        onChange={onChange}\n        maxNumber={maxNumber}\n        dataURLKey=\"data_url\"\n      >\n        {({\n          imageList,\n          onImageUpload,\n          onImageRemoveAll,\n          onImageUpdate,\n          onImageRemove,\n          isDragging,\n          dragProps,\n        }) => (\n          <div className=\"upload__image-wrapper\">\n            {images.length === 0 && (\n              <>\n                <br />\n                <Button\n                  variant=\"contained\"\n                  color=\"default\"\n                  startIcon={<CloudUploadIcon />}\n                  onClick={onImageUpload}\n                  {...dragProps}\n                >\n                  Upload Image\n                </Button>\n                <br /><br />\n                Upload an image to detect food ingredients.\n              </>\n            )}\n            {imageList.map((image, index) => (\n              <div key={index} className=\"image-item\">\n                  <br />\n                <img src={image[\"data_url\"]} alt=\"\" width=\"200\" />\n                <div className=\"image-item__btn-wrapper\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    startIcon={<UpdateIcon />}\n                    onClick={() => onImageUpdate(index)}\n                  >\n                    Update\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </ImageUploading>\n    </>\n  );\n};\n\nImageUploader.propTypes = {\n  images: PropTypes.array,\n  setImages: PropTypes.func.isRequired,\n};\n\nexport default ImageUploader;\n","import { React, useEffect } from \"react\";\nimport Clarifai from \"clarifai\";\nimport PropTypes from \"prop-types\";\n\nconst Detector = ({ API_KEY, images, setDetected }) => {\n  const app = new Clarifai.App({ apiKey: API_KEY });\n\n  const detect = async (image) => {\n    try {\n      const data = await app.models.predict(Clarifai.FOOD_MODEL, image);\n      data.rawData.outputs[0].data.concepts.forEach((element) => {\n        element.value = `${parseFloat(element.value * 100).toFixed(2)} %`;\n      });\n      setDetected(data.rawData.outputs[0].data.concepts);\n    } catch (err) {\n      console.log(err);\n      setDetected([]);\n    }\n  };\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const temp = images[0].data_url;\n      const parsed = temp.split(\",\");\n      const image = parsed[1];\n      detect(image);\n    }\n  }, [images]);\n\n  return <></>;\n};\n\nDetector.propTypes = {\n  API_KEY: PropTypes.string.isRequired,\n  images: PropTypes.array,\n  setDetected: PropTypes.func.isRequired,\n};\n\nexport default Detector;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTable } from \"react-table\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: '#d3d3d3',\n    },\n  },\n}))(TableRow);\n\n\nconst Ingredients = ({ detected }) => {\n  const data = React.useMemo(() => detected, [detected]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"INGREDIENT\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"CHANCE\",\n        accessor: \"value\",\n      },\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data, initialState: { hiddenColumns: [\"id\"] } });\n\n  return (\n    <>\n      {\" \"}\n      {detected.length > 0 && (\n        <TableContainer component={Paper}>\n          <MaUTable {...getTableProps()}>\n            <TableHead>\n              {headerGroups.map((headerGroup) => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column) => (\n                    <TableCell {...column.getHeaderProps()}>\n                      {column.render(\"Header\")}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableHead>\n            <TableBody {...getTableBodyProps()}>\n              {rows.map((row) => {\n                prepareRow(row);\n                return (\n                  <StyledTableRow {...row.getRowProps()}>\n                    {row.cells.map((cell) => {\n                      return (\n                        <StyledTableCell {...cell.getCellProps()}>\n                          {cell.render(\"Cell\")}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </StyledTableRow>\n                );\n              })}\n            </TableBody>\n          </MaUTable>\n        </TableContainer>\n      )}\n    </>\n  );\n};\n\nIngredients.propTypes = {\n  detected: PropTypes.array.isRequired,\n};\n\n\nexport default Ingredients;\n"],"sourceRoot":""}