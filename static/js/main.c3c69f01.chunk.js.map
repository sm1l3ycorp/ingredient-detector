{"version":3,"sources":["Components/Header/Header.js","Components/ImageUploader/ImageUploader.js","Components/Detector/Detector.js","Components/Ingredients/Ingredients.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","title","display","paddingLeft","breakpoints","up","Header","classes","className","AppBar","position","Toolbar","Typography","variant","noWrap","ImageUploader","images","setImages","value","onChange","imageList","addUpdateIndex","maxNumber","dataURLKey","onImageUpload","onImageUpdate","onImageRemoveAll","dragProps","onImageRemove","isDragging","length","Button","color","startIcon","onClick","map","image","index","src","alt","width","Detector","API_KEY","setDetected","app","Clarifai","App","apiKey","detect","a","models","predict","FOOD_MODEL","data","rawData","outputs","concepts","forEach","element","parseFloat","toFixed","console","log","useEffect","data_url","split","propTypes","PropTypes","string","isRequired","array","func","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","TableRow","Ingredients","detected","React","useMemo","columns","accessor","useTable","initialState","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","TableContainer","component","Paper","TableHead","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","TableBody","row","getRowProps","cells","cell","getCellProps","process","AppStyle","styled","div","TableWrapper","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3c69f01.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: \"none\",\n    paddingLeft: \"1rem\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <FastfoodIcon />\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Ingredient Detector\n          </Typography>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport ImageUploading from \"react-images-uploading\";\nimport { Button } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport PropTypes from 'prop-types';\n\nconst ImageUploader = ({ images, setImages }) => {\n  const maxNumber = 1;\n\n  const onChange = (imageList, addUpdateIndex) => {\n    setImages(imageList);\n  };\n\n  return (\n    <>\n      <ImageUploading\n        value={images}\n        onChange={onChange}\n        maxNumber={maxNumber}\n        dataURLKey=\"data_url\"\n      >\n        {({\n          imageList,\n          onImageUpload,\n          onImageRemoveAll,\n          onImageUpdate,\n          onImageRemove,\n          isDragging,\n          dragProps,\n        }) => (\n          <div className=\"upload__image-wrapper\">\n            {images.length === 0 && (\n              <>\n                <br />\n                <Button\n                  variant=\"contained\"\n                  color=\"default\"\n                  startIcon={<CloudUploadIcon />}\n                  onClick={onImageUpload}\n                  {...dragProps}\n                >\n                  Upload Image\n                </Button>\n                <br /><br />\n                Upload an image to detect food ingredients.\n              </>\n            )}\n            {imageList.map((image, index) => (\n              <div key={index} className=\"image-item\">\n                  <br />\n                <img src={image[\"data_url\"]} alt=\"\" width=\"200\" />\n                <div className=\"image-item__btn-wrapper\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    startIcon={<UpdateIcon />}\n                    onClick={() => onImageUpdate(index)}\n                  >\n                    Update\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </ImageUploading>\n    </>\n  );\n};\n\nImageUploader.propTypes = {\n  images: PropTypes.array,\n  setImages: PropTypes.func.isRequired,\n};\n\nexport default ImageUploader;\n","import { React, useEffect } from \"react\";\nimport Clarifai from \"clarifai\";\nimport PropTypes from \"prop-types\";\n\nconst Detector = ({ API_KEY, images, setDetected }) => {\n  const app = new Clarifai.App({ apiKey: API_KEY });\n\n  const detect = async (image) => {\n    try {\n      const data = await app.models.predict(Clarifai.FOOD_MODEL, image);\n      data.rawData.outputs[0].data.concepts.forEach((element) => {\n        element.value = `${parseFloat(element.value * 100).toFixed(2)} %`;\n      });\n      setDetected(data.rawData.outputs[0].data.concepts);\n    } catch (err) {\n      console.log(err);\n      setDetected([]);\n    }\n  };\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const temp = images[0].data_url;\n      const parsed = temp.split(\",\");\n      const image = parsed[1];\n      detect(image);\n    }\n  }, [images]);\n\n  return <></>;\n};\n\nDetector.propTypes = {\n  API_KEY: PropTypes.string.isRequired,\n  images: PropTypes.array,\n  setDetected: PropTypes.func.isRequired,\n};\n\nexport default Detector;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTable } from \"react-table\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: '#d3d3d3',\n    },\n  },\n}))(TableRow);\n\n\nconst Ingredients = ({ detected }) => {\n  const data = React.useMemo(() => detected, [detected]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"INGREDIENT\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"CHANCE\",\n        accessor: \"value\",\n      },\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data, initialState: { hiddenColumns: [\"id\"] } });\n\n  return (\n    <>\n      {\" \"}\n      {detected.length > 0 && (\n        <TableContainer component={Paper}>\n          <MaUTable {...getTableProps()}>\n            <TableHead>\n              {headerGroups.map((headerGroup) => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column) => (\n                    <TableCell {...column.getHeaderProps()}>\n                      {column.render(\"Header\")}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableHead>\n            <TableBody {...getTableBodyProps()}>\n              {rows.map((row) => {\n                prepareRow(row);\n                return (\n                  <StyledTableRow {...row.getRowProps()}>\n                    {row.cells.map((cell) => {\n                      return (\n                        <StyledTableCell {...cell.getCellProps()}>\n                          {cell.render(\"Cell\")}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </StyledTableRow>\n                );\n              })}\n            </TableBody>\n          </MaUTable>\n        </TableContainer>\n      )}\n    </>\n  );\n};\n\nIngredients.propTypes = {\n  detected: PropTypes.array.isRequired,\n};\n\n\nexport default Ingredients;\n","import styled from \"styled-components\";\nimport { React, useState } from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport ImageUploader from \"./Components/ImageUploader/ImageUploader\";\nimport Detector from \"./Components/Detector/Detector\";\nimport Ingredients from \"./Components/Ingredients/Ingredients\";\nconst API_KEY = process.env.API_KEY;\n\nconst AppStyle = styled.div`\n  text-align: center;\n`;\nconst TableWrapper = styled.div`\n  width: 30rem;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [detected, setDetected] = useState([]);\n\n  return (\n    <AppStyle>\n      <Header />\n      <ImageUploader images={images} setImages={setImages} />\n      <Detector API_KEY={API_KEY} images={images} setDetected={setDetected} />\n      <br />\n      <TableWrapper>\n        <Ingredients detected={detected} />\n      </TableWrapper>\n      <br />\n    </AppStyle>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}